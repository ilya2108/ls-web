image: docker:latest

services:
  - docker:dind

stages:
  - build
  - deploy

# build docker container and push it into the private registry of this repo
build:
  stage: build
  script:
    # logging into Gitlab's private container registry using credentials created 
    # for this purpose, building our container and pushing into the registry 
    - docker login -u "$CI_REGISTRY_USER" -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/learnshell-2.0/ls-web .
    - docker push $CI_REGISTRY/learnshell-2.0/ls-web
  ## only merge in case of commit made in the master branch
  #only:
  #  - master 
    
# toggle rebuild of pod containing the container built in the previous stage    
deploy:
  stage: deploy
  image: alpine:latest
  script:
    # installing kubectl using curl (as recommended in Google's docs)
    - apk update  && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    # passing cluster kubeconfig to the gitlab-runner pod
    - mkdir -p $HOME/.kube
    - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
    # redeploying pod in order to pull newly built image
    - kubectl rollout restart deployment web
  ## only merge in case of commit made in the master branch
  #only:
  #  - master
